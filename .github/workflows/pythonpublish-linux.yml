name: Python packages linux

on:
  release:
    types: [published]
  push:

jobs:
  build:
    name: build python packages
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux_2_28_x86_64
    strategy:
      fail-fast: false
      matrix:
        python-version: ['cp38-cp38', 'cp39-cp39', 'cp310-cp310']
    steps:
      - name: add Python and qt dir to path
        run: |
            echo "/opt/python/${{ matrix.python-version }}/bin" >> $GITHUB_PATH
            echo "/Qt/6.3.0/gcc_64/bin" >> $GITHUB_PATH
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Build for Python ${{ matrix.python-version }}
        run: |
            dnf install -y /usr/lib64/libxkbcommon.so.0 /usr/lib64/libxslt.so.1 /usr/bin/llvm-config clang
            git config --global --add safe.directory '*'
            python -m pip install --upgrade "pip" "meson" "ninja" "numpy" "meson-python" "build" "wheel" "twine" "auditwheel" "aqtinstall"
            python -m pip install "PySide6==6.3.0"
            python -m pip install \
                --index-url=http://download.qt.io/official_releases/QtForPython/ \
                --trusted-host download.qt.io \
                "shiboken6_generator==6.3.0"
            aqt install-qt -O /Qt linux desktop 6.3.0
            LD_LIBRARY_PATH=/Qt/6.3.0/gcc_64/lib python3 -m build --no-isolation  .
            python bindings/helper_scripts/rpath-helper.py  --pyside_version 6 --wheel-file dist/*.whl
            rename 'linux_x86_64' 'manylinux_2_28_x86_64' dist/*.whl
            #export SITE_PACKAGES=$(python -c 'import site; print(site.getsitepackages()[0])')
            #LD_LIBRARY_PATH=$SITE_PACKAGES/PySide6/Qt/lib:$SITE_PACKAGES/shiboken6:$SITE_PACKAGES/PySide6 auditwheel repair dist/sciqlopplots-*.whl
      - name: Save packages as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sciqlopplots-linux-${{ matrix.python-version }}
          path: dist/*
      - name: Publish on PyPi
        if: github.event.release
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: twine upload --skip-existing dist/*
      - name: Publish on PyPi (test)
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TEST_PASSWORD }}
        run: twine upload --repository testpypi --skip-existing dist/*
