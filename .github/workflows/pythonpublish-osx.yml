name: Python packages OSX

on:
  release:
    types: [published]
  push:

jobs:
  build_macos_x86:
    runs-on: macos-11
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        pyside_ver: ['6.6.0']
    name: Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v3
      - name: Build python wheel
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: add qt dir to path
        run: |
            echo "$GITHUB_WORKSPACE/Qt/${{ matrix.pyside_ver }}/macos/bin" >> $GITHUB_PATH
      - name: install dependencies
        run: |
          pip install --upgrade "meson" "ninja" "numpy" "meson-python>=0.14.0" "build" "wheel" "twine" "aqtinstall"
          pip install "PySide6==${{ matrix.pyside_ver }}"
          pip install \
              --index-url=http://download.qt.io/official_releases/QtForPython/ \
              --trusted-host download.qt.io "shiboken6_generator==${{ matrix.pyside_ver }}"
          aqt install-qt -O $GITHUB_WORKSPACE/Qt mac desktop ${{ matrix.pyside_ver }}
      - name: build package
        run: |
          python3 -m build --wheel --no-isolation .
      - name: Save packages as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sciqlopplots-MacOs-x86-${{ matrix.python-version }}
          path: dist/*
      - name: Publish on PyPi
        if: github.event.release
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: twine upload --skip-existing dist/*
      - name: Publish on PyPi (test)
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TEST_PASSWORD }}
        run: twine upload --repository testpypi --skip-existing dist/*.whl

  build_macos_arm:
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        pyside_ver: ['6.6.0']
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: add pyenv to path
        run: |
          echo "$HOME/.pyenv/shims" >> $GITHUB_PATH
      - name: add qt dir to path
        run: |
            echo "$GITHUB_WORKSPACE/Qt/${{ matrix.pyside_ver }}/macos/bin" >> $GITHUB_PATH
      - name: install dependencies
        run: |
          brew install pyenv
          pyenv install ${{ matrix.python-version }}
          pyenv local ${{ matrix.python-version }}
          python3 -m pip install meson numpy ninja build wheel twine meson-python>=0.14.0
          pip install --upgrade "meson" "ninja" "numpy" "meson-python>=0.14.0" "build" "wheel" "twine" "aqtinstall"
          pip install "PySide6==${{ matrix.pyside_ver }}"
          pip install \
              --index-url=http://download.qt.io/official_releases/QtForPython/ \
              --trusted-host download.qt.io "shiboken6_generator==${{ matrix.pyside_ver }}"
          aqt install-qt -O $GITHUB_WORKSPACE/Qt mac desktop ${{ matrix.pyside_ver }}
      - name: build package
        run: |
          pyenv local ${{ matrix.python-version }}
          python3 -m build --wheel --no-isolation  .
      - name: Save packages as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sciqlopplots-MacOs-arm-${{ matrix.python-version }}
          path: dist/*
      - name: Publish on PyPi
        if: github.event.release
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: twine upload --skip-existing dist/*
      - name: Publish on PyPi (test)
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TEST_PASSWORD }}
        run: twine upload --repository testpypi --skip-existing dist/*.whl
